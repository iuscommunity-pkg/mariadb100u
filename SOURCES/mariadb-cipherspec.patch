Some test items assume the default SSL cipher is DHE-RSA-AES256-SHA, 
which is no longer the case as of openssl 1.0.1.
This patch enhances connect command by an option to specify a cipher 
and tests are adjusted to specify the expected cipher explicitly.
Upstream bug report: http://bugs.mysql.com/bug.php?id=64461

diff -Naur a/client/mysqltest.cc b/client/mysqltest.cc
--- a/client/mysqltest.cc	2014-11-27 13:01:47.473043651 -0600
+++ b/client/mysqltest.cc	2014-11-27 13:02:56.004014199 -0600
@@ -5913,6 +5913,7 @@
   my_bool con_pipe= 0;
   my_bool con_shm __attribute__ ((unused))= 0;
   struct st_connection* con_slot;
+  char *con_cipher=NULL;
 
   static DYNAMIC_STRING ds_connection_name;
   static DYNAMIC_STRING ds_host;
@@ -6008,6 +6009,8 @@
       con_pipe= 1;
     else if (length == 3 && !strncmp(con_options, "SHM", 3))
       con_shm= 1;
+    else if (!strncmp(con_options, "CIPHER:", 7))
+      con_cipher = con_options + 7;
     else
       die("Illegal option to connect: %.*s", 
           (int) (end - con_options), con_options);
@@ -6057,8 +6060,11 @@
   if (con_ssl)
   {
 #if defined(HAVE_OPENSSL) && !defined(EMBEDDED_LIBRARY)
+    /* default cipher */
+    if (con_cipher == NULL && opt_ssl_cipher != NULL)
+      con_cipher = opt_ssl_cipher;
     mysql_ssl_set(con_slot->mysql, opt_ssl_key, opt_ssl_cert, opt_ssl_ca,
-		  opt_ssl_capath, ssl_cipher ? ssl_cipher : opt_ssl_cipher);
+		  opt_ssl_capath, ssl_cipher ? ssl_cipher : con_cipher);
     mysql_options(con_slot->mysql, MYSQL_OPT_SSL_CRL, opt_ssl_crl);
     mysql_options(con_slot->mysql, MYSQL_OPT_SSL_CRLPATH, opt_ssl_crlpath);
 #if MYSQL_VERSION_ID >= 50000
diff -Naur a/mysql-test/t/openssl_1.test b/mysql-test/t/openssl_1.test
--- a/mysql-test/t/openssl_1.test	2014-11-27 13:02:02.039824713 -0600
+++ b/mysql-test/t/openssl_1.test	2014-11-27 13:03:14.371739071 -0600
@@ -133,7 +133,7 @@
 # and ca path to NULL
 #
 --replace_result DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES256-SHA
---exec $MYSQL --ssl --ssl-key=$MYSQL_TEST_DIR/std_data/client-key.pem --ssl-cert=$MYSQL_TEST_DIR/std_data/client-cert.pem -e "SHOW STATUS LIKE 'ssl_Cipher'" 2>&1
+--exec $MYSQL --ssl --ssl-key=$MYSQL_TEST_DIR/std_data/client-key.pem --ssl-cert=$MYSQL_TEST_DIR/std_data/client-cert.pem --ssl-cipher=DHE-RSA-AES256-SHA -e "SHOW STATUS LIKE 'ssl_Cipher'" 2>&1
 --echo End of 5.0 tests
 
 #
@@ -258,7 +258,7 @@
 
 GRANT SELECT ON test.* TO bug42158@localhost REQUIRE X509;
 FLUSH PRIVILEGES;
-connect(con1,localhost,bug42158,,,,,SSL);
+connect(con1,localhost,bug42158,,,,,SSL CIPHER:DHE-RSA-AES256-SHA);
 --replace_result DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES256-SHA
 SHOW STATUS LIKE 'Ssl_cipher';
 disconnect con1;
diff -Naur a/mysql-test/t/ssl_compress.test b/mysql-test/t/ssl_compress.test
--- a/mysql-test/t/ssl_compress.test	2014-11-27 13:02:11.452682874 -0600
+++ b/mysql-test/t/ssl_compress.test	2014-11-27 13:03:25.144575736 -0600
@@ -8,7 +8,7 @@
 # Save the initial number of concurrent sessions
 --source include/count_sessions.inc
 
-connect (ssl_compress_con,localhost,root,,,,,SSL COMPRESS);
+connect (ssl_compress_con,localhost,root,,,,,SSL COMPRESS CIPHER:DHE-RSA-AES256-SHA);
 
 # Check ssl turned on
 --replace_result DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES256-SHA
diff -Naur a/mysql-test/t/ssl.test b/mysql-test/t/ssl.test
--- a/mysql-test/t/ssl.test	2014-11-27 13:02:18.187581696 -0600
+++ b/mysql-test/t/ssl.test	2014-11-27 13:03:33.165456120 -0600
@@ -8,7 +8,7 @@
 # Save the initial number of concurrent sessions
 --source include/count_sessions.inc
 
-connect (ssl_con,localhost,root,,,,,SSL);
+connect (ssl_con,localhost,root,,,,,SSL CIPHER:DHE-RSA-AES256-SHA);
 
 # Check ssl turned on
 --replace_result DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES256-SHA
diff -Naur a/mysql-test/t/ssl_8k_key.test b/mysql-test/t/ssl_8k_key.test
--- a/mysql-test/t/ssl_8k_key.test	2014-11-27 13:02:29.597404139 -0600
+++ b/mysql-test/t/ssl_8k_key.test	2014-11-27 13:03:41.462330496 -0600
@@ -5,7 +5,7 @@
 #
 # Bug#29784 YaSSL assertion failure when reading 8k key.
 #
---exec $MYSQL --ssl --ssl-key=$MYSQL_TEST_DIR/std_data/client-key.pem --ssl-cert=$MYSQL_TEST_DIR/std_data/client-cert.pem -e "SHOW STATUS LIKE 'ssl_Cipher'" 2>&1
+--exec $MYSQL --ssl --ssl-key=$MYSQL_TEST_DIR/std_data/client-key.pem --ssl-cert=$MYSQL_TEST_DIR/std_data/client-cert.pem --ssl-cipher=DHE-RSA-AES256-SHA -e "SHOW STATUS LIKE 'ssl_Cipher'" 2>&1
 
 ##  This test file is for testing encrypted communication only, not other
 ##  encryption routines that the SSL library happens to provide!
